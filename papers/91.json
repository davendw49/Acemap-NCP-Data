{"date": "2020/01/29", "journal": "biorxiv", "authors": "Jakub M. Bartoszewicz, Anja Seidel, Bernhard Y. Renard", "title": "Interpretable detection of novel human viruses from genome sequencing data", "type": "preprint article", "abstract": "Viruses evolve extremely quickly, so reliable methods for viral host prediction are necessary to safeguard biosecurity and biosafety alike. Novel human-infecting viruses are difficult to detect with standard bioinformatics workflows. Here, we predict whether a virus can infect humans directly from next-generation sequencing reads. We show that deep neural architectures significantly outperform both shallow machine learning and standard, homology-based algorithms, cutting the error rates in half and generalizing to taxonomic units distant from those presented during training. We propose a new approach for convolutional filter visualization to disentangle the information content of each nucleotide from its contribution to the final classification decision. Nucleotide-resolution maps of the learned associations between pathogen genomes and the infectious phenotype can be used to detect virulencerelated genes in novel agents, as we show here for the 2019-nCoV coronavirus, unknown before it caused a pneumonia outbreak in December 2019.", "text": "          Within a globally interconnected and densely populatedworld, pathogens can spread more easily than they ever didbefore. As the recent outbreaks of Ebola and Zika viruseshave shown, the risks posed even by these previously knownagents remain unpredictable and their expansion hard tocontrol                    Several computational, genome-based methods exist thatallow to predict the host-range of a bacteriophage (abacteriainfecting virus). A selection of composition-based andalignment-based approaches has been presented in anextensive review by                    While DNA sequences mapped to a reference genome maybe represented as images                    Interpretability and explainability of deep learning modelsfor genomics is crucial for their wide-spread adoption, as itis necessary for delivering trustworthy and actionable results.Convolutional filters can be visualized by forward-passingmultiple sequences through the network and extracting themost-activating subsequences                    In this paper, we first improve the performance of read-basedpredictions of the viral host (human or non-human) fromnext-generation sequencing reads. We show thatreversecomplement (RC) neural networks                    Next, we propose a new approach for convolutional filtervisualization using partial Shapley values to differentiatebetween simple nucleotide information content and thecontribution of each sequence position to the final classificationscore. To test the biological plausibility of our models, wegenerate genome-wide maps of \"infectious potential\" andnucleotide contributions. We show that those maps can beused to visualize and detect virulence-related regions ofinterest (e.g. genes) in novel genomes. Finally, we analyze arecently discovered 2019-nCoV coronavirus, which causeda pneumonia outbreak in December 2019                      We accessed the Virus-Host Database            While defining a human-infecting class is relativelystraightforward, the reference negative class may beconceptualized in a variety of ways. The broadest definition takes allnon-human viruses into account, including bacteriophages(bacterial viruses). This is especially important, as most ofknown bacteriophages are DNA viruses, while manyimportant human (and animal) viruses are RNA viruses. Onecould expect that the multitude of available bacteriophagegenomes dominating the negative class could lower theprediction performance on viruses similar to those infectinghumans. This offers an open-view approach covering a widerpart of the sequence space, but may lead to misclassificationof potentially dangerous mammalian or avian viruses. Asthey are often involved in clinically relevant host-switchingevents, a stricter approach must also be considered. In thiscase, the negative class comprises only viruses infectingChordata (a group containing vertebrates and closely relatedtaxa). Two intermediate approaches consider alleukaryotic viruses (including plant and fungi viruses), or onlyanimal-infecting viruses. This amounts to four nested hostsets: \"All\" (8,187 non-human viruses), \"Eukaryota\" (5,114viruses), \"Metazoa\" (2,942 viruses) and \"Chordata\" (2,078viruses). Auxiliary sets containing only non-eukaryoticviruses (\"non-Eukaryota\"), non-animal eukaryotic viruses(\"non-Metazoa Eukaryota\") etc. can be easily constructedby set subtraction.For the positive class, we generated a training set containing80% of the genomes, and validation and test sets with 10%of the genomes each. Importantly, the nested structure waskept also during the training-validation-test split: forexample, the species assigned to the smallest test set (\"Chordata\")were also present in all the bigger test sets. The sameapplied to other taxonomic levels, as well as the training andvalidation sets wherever applicable.            We simulated 250bp long Illumina reads following amodification of a previously described protocol            In each of the evaluated settings, we used a total of 20million (80%) reads for training, 2.5 million (10%) reads forvalidation and 2.5 million (10%) paired reads as theheldout test set. Read number per genome was proportional togenome length, keeping the coverage uniform on average.While the original datasets are heavily imbalanced, wegenerated the same number of negative and positive data points(reads) regardless of the negative class definition used.This protocol allowed us to test the impact of defining thenegative class, while using the exactly same data asrepresentatives of the positive class. We used three training andvalidation sets (\"All\", \"Stratified\", and \"Chordata\"),representing the fully open-view setting, a setting more balancedwith regard to the host taxonomy, and a setting focused oncases most likely to be clinically relevant. In each setting,the validation set matched the composition of the trainingset. The evaluation was performed using all five test sets togain a more detailed insight on the effects of negative classdefinition on the prediction performance.            Similarily to                      We used the DeePaC package          We wanted the networks to yield accurate predictions forboth 250bp (our data, modelling a sequencing run of anIllumina MiSeq device) and 150bp long reads (as in the HumanBlood Virome dataset). As shorter reads are padded withzeroes, we expected the CNNs trained using averagepooling to misclassify many of them. Therefore, we prepared amodified version of the \"Stratified\" dataset, in which the last100bp of each read were turned to zeros, mocking a shortersequencing run while preserving the error model. Then, weretrained the CNN which had performed best on the originaldataset. Since in principle, the Human Blood Virome datasetshould not contain viruses infecting non-human Chordata, a\"Chordata\"-trained classifier was not used in this setting.          We compare the networks to the k-NN classifier proposedby                      In order to visualize the learned convolutional filters, wedownsample a matching test set to 125,000 reads and passit through the network. This is modelled after the methodpresented by            We use an all-zero reference. As reads from real sequencingruns are usually not equally long, shorter reads must bepadded with N s; the \"unknown\" nucleotide is also calledwhenever there is not enough evidence to assign any otherto the raw sequencing signal. Therefore, N s are \"null\"nucleotides and are a natural candidate for the referenceinput. We do not consider alternative solutions based onGC content or dinucleotide shuffling, as the input readsoriginate from multiple different species, and the sequencecomposition may itself be a strong marker of both virus andhost taxonomy.However, some of the training sequences contain N sthemselves. It is therefore possible that a filter will learn onlynegative weights at a given position, even though there is nobiological justification for that. This may lead to assigningonly negative contributions to all four possible nucleotidesat a given position if the filter\u2019s contribution is positive (andpositive nucleotide contributions if the filter\u2019s contributionis negative). To solve the problem, we first normalize theweight matrices position-wise, as described by Shrikumar etal. (2019a). Finally, we calculate average filter contributionsto obtain a crude ranking of feature importance with regardto both the positive and negative class.            Building sequence logos involves calculating informationcontent (IC) of each nucleotide at each position in aprospective DNA motif. This can be then interpreted as measureof evolutionary sequence conservation. However, highinformation content does not necessarily imply that a givennucleotide is relevant in terms of its contribution to theclassifier\u2019s output. Some sub-motifs may be present in thesequences used to build the logo, even if they do not contributeto the final prediction (or even a given filter\u2019s activation).To test this hypothesis, we use partial Shapley values.Intuitively speaking, we capture the contributions of a nucleotideto the network\u2019s output, but only in the context of a givenintermediate neuron of the convolutional layer. Moreprecisely, for any given feature xi, intermediate neuron yj andthe output neuron z, we aim to measure how xi contributesto z while regarding only the fraction of the totalcontribution of xi that influences how yj contributes to z.Using the formalism of DeepLIFT\u2019s multipliers                        E[xi]) =i(yj ; x) j (z; y)yjFrom the chain rule for multipliers                        Once we calculate the contributions of convolutional filtersfor the first layer, 'i(yj)(z; x) for the first convolutional layerof a network with one-hot encoded inputs and an all-zeroreference can be efficiently calculated using weight matricesand filter activation differences (Eq. 3-4). First, in this casewe do not traverse any non-linearities and can directly usethe linear rule            otherwisewi j (z; y)yjResulting partial contributions can be visualized along theinformation content of each nucleotide of a convolutionalkernel. To this end, we design extended sequence logos,where each nucleotide is colored according to itscontribution. Positive contributions are shown in red, negativecontributions are blue, and near-zero contributions are gray.Therefore, no information is lost compared to standardsequence logos, but the relevance of individual nucleotidesand the filter as a whole can be easily seen.          We create genome-wide phenotype analysis (GWPA) plotsto analyse which parts of a viral genome are associatedwith the infectious phenotype. We scramble the genomeinto overlapping, 250bp long subsequences (pseudo-reads)without adding any sequencing noise. For the highestresolution, we use a stride of one nucleotide. We predict theinfectious potential of each pseudo-read and average theobtained values at each position of the genome. Analogously,we calculate average contributions of each nucleotide tothe final prediction of the convolutional network. Wevisualize the resulting nucleotide-resolution maps with IGV(          For well-annotated genomes, we compile a ranking of genes(or other genomic features) sorted by the average infectiouspotential within a given region. In addition to that, we scanthe genome with the learned filters of the first convolutionallayer to find genes enriched in subsequences yieldingnonzero filter activations. We use Gene Ontology to connect theidentified genes of interest with their molecular functionsand biological processes they are engaged in.          As a proof of concept, we analyze one of the virusesrandomly assigned to the test set \u2013 the Ta\u00ef Forest ebolavirus,which has a history of host-switching and can cause aserious disease. To show that the method can also be usedfor other biological problems, we investigated the networkstrained by          Choosing which viruses should constitute the negative classis application dependent and influences the performanceof the trained models. Table 1 summarizes the predictionaccuracy for different combinations of the training and testset composition. The models trained only on human andChordata-infecting viruses maintain similar, or even betterperformance when evaluated on viruses infecting a muchbroader host range, including bacteria. This suggests that thelearned decision boundary separates human viruses from allthe others surprisingly well. We hypothesize that the humanhost signal must be relatively strong and contained withinthe Chordata host signal.Adding more diversity to the negative class may still boostperformance on more diverse test sets, as in the case ofLSTM trained on the \"All\" dataset (LSTMAll). This modelunderperforms on viruses infecting hosts related to humans,but achieves higher accuracy than the \"Chordata\"-trainedmodels and the best recall overall. Rebalancing the negativeclass using the \"Stratified\" dataset helps to achieve higherperformance on animal viruses without sacrificing theoverall accuracy. CNNStr-150 trained on the first 150bp of eachread in \"Stratified\" has the best accuracy overall. In thiscase, shortening the reads could have a regularizing effect.          We selected LSTMAll and CNNStr-150 for further evaluation.Table 2 presents the results of a benchmark using the \"All\"test set. Low performance of the k-NN classifier                    We benchmarked our models against the human bloodvirome dataset used by                    In the Fig. 1 we present example filters, visualized as\"maxcontrib\" sequence logos based on mean partial Shapleyvalues for each nucelotide at each position. All nucleotidesof the filters with the highest (Fig. 1a) or lowest (Fig. 1b)score have relatively strong contributions in accordancewith the filters\u2019 own contributions. However, we observethat sometimes, there is a \"conserved\" nucleotide whichconsistently appears in the activating subsequences, but thesign of its contributions is opposite to the filter\u2019s (Fig. 1c).Those \"counter-contributions\" may arise if a nucleotide witha negative weight forms a frequent motif with others withpositive weights strong enough to activate the filter. Wecomment on this fact in the Section 4.2. Some filters seem tolearn gapped motifs resembling a codon structure (Fig. 1d).We extracted this filter from a network predicting bacterialpathogenicity trained by          We created a GWPA plot for the Ta\u00ef Forest ebolavirusgenome (Fig. 2). Most genes can be detected by findingpeaks of elevated pathogenic potential score predicted by atleast one of the models. Intergenic regions are characterizedby lower mean scores.          We ran a similar analysis of S. aureus using the built-inDeePaC models                    Fig. 3a presents a GWPA plot for the whole genome of the2019-nCoV coronavirus. We highlighted the score peaksaligning with the gene encoding the spike protein, whichplays a significant role in host entry                    Compared to the previous state-of-the-art in viral hostprediction directly from next-generation sequencing reads(a)(c)(b)(d)          Visualizing convolutional filters may help to identifypotential problems. If the input data contains N s, a ReLU networkmay learn only negative weights at some positions, resulting          (a) Whole genome and sequences encoding the spike protein (S), envelope protein (E) and nucleocapsid protein (N).(b) Spike protein gene, a small peak (positions 22,595-22,669) within the receptor-binding domain (predictied by CD-search). Binding tothe receptor is crucial for entry to the host cell. Local host adaptation could help switch hosts between the animal reservoir and humans.in counter-contributions for all possible nucleotides at thosepositions. In our case, as the filters were weight-normalized,the counter-contributions suggest that the informationcontent and the contribution of a nucleotide are not necessarilycorrelated. Visualizing learned motifs by aligning theactivating sequences          Mapping predictions back to a target genome can be usedboth as a way of investigating a given model\u2019s performanceand as a method of genome analysis. GWPA plots ofwellannotated genomes highlight the sequences with erroneousand correct phenotype predictions at both genome and genelevel, and nucleotide-resolution contribution maps help trackthose regions down to individual amino-acids. On the otherhand, once a trusted model is developed, it can be used onnewly emerging pathogens, as the 2019-nCoV virus brieflyanalyzed in this work. The methods presented here may alsobe applied to other biological problems outside of the fieldof pathogen genomics. However, experimental work andtraditional sequence analysis are required to truly understandthe biology behind host adaptation and distinguish true hitsfrom false positives.We presented a new approach for predicting a host of a novelvirus based on a single DNA read or a read pair, cutting theerror rates in half compared to the previous state-of-the-art.For convolutional filters, we jointly visualize nucleotidecontributions and information content. Finally, we use GWPAplots to gain insights into the models\u2019 behavior and analyzea recently emerged 2019-nCoV virus. The code is availableat: https://gitlab.com/rki_bioinformatics/deepac.We gratefully acknowledge Yong-Zhen Zhang and thescientists at the Shanghai Public Health Clinical Center &School of Public Health, Fudan University, who sharedthe sequence of the 2019-nCoV virus ahead ofpublication. We thank Melania Nowicka (Max Plank Institutefor Molecular Genetics) for inspiring discussions onefficient calculations of partial Shapley values and LotharH. Wieler (Robert Koch Institute) for useful commentson the first draft of the manuscript. This work wassupported by the German Academic ScholarshipFoundation (JMB) and the BMBF-funded de.NBI Cloud withinthe German Network for Bioinformatics Infrastructure(de.NBI) (031A537B, 031A533A, 031A538A, 031A533B,031A535A, 031A537C, 031A534A, 031A532B).", "ref_list": [[], ["the sequence specificities of DNA-"], ["Basic local alignment search tool"], ["Deep learning at baseresolution reveals motif syntax of the cis-regulatory code"], ["Predicting reservoir hosts and arthropod vectors from evolutionary signatures in RNA virus genomes"], ["On Pixel-Wise Explanations for Non-Linear Classifier Decisions by Layer-Wise Relevance Propagation"], ["DeePaC: predicting pathogenic potential of novel DNA with reverse-complement neural networks"], ["CNNs with bag-of-local-features models works surprisingly well on ImageNet"], ["Editorial commentary: Unbiased next-generation sequencing and new pathogen discovery: undeniable advantages and still-existing drawbacks"], ["Clock rooting further demonstrates that guinea 2014 ebov is a member of the za\u00efre lineage"], ["WebLogo: a sequence logo generator"], ["Computational approaches to predict bacteriophagehost relationships"], ["Predicting host tropism of influenza a virus proteins using random forest"], ["Deep learning: new computational modelling techniques for genomics"], ["Host taxon predictor - a tool for predicting taxon of the host of a newly discovered virus"], ["Discovering epistatic feature interactions from neural network models of regulatory DNA sequences"], ["Airborne Transmission of Influenza A/H5n1 Virus Between Ferrets"], ["Mason - a read simulator for second generation sequencing data"], ["Experimental adaptation of an influenza H5 HA confers respiratory droplet transmission to a reassortant H5 HA/H1n1 virus in ferrets"], ["Improving interpretability of deep learning models: splicing codes as a case study"], [": learning the regulatory code of the accessible genome with deep convolutional neural networks"], ["Motif: Visualizing Genomic Sequence Classifications"], ["Deep motif dashboard: visualizing and understanding genomic sequences using deep neural networks"], ["The diagnosis of infectious diseases by whole genome next generation sequencing: a new era is opening"], ["the evidence supporting fruit bats as the primary reservoirs for ebola viruses"], ["Evolution of Coronavirus Spike Proteins"], ["and"], ["Moratorium on Research Intended To Create Novel Potential Pandemic Pathogens"], ["A Unified Approach to Interpreting Model Predictions"], ["CDD/SPARCLE: functional classification of proteins via subfamily domain architectures"], ["Linking virus genomes with host taxonomy"], ["Viral host prediction with deep learning"], ["The blood DNA virome in 8,000 humans"], ["Optimal ensemble averaging of neural networks"], ["Integrating regulatory DNA sequence and gene expression to predict genome-wide chromatin accessibility across cellular contexts"], ["Construction of an infectious horsepox virus vaccine from chemically synthesized DNA fragments"], ["A. A universal SNP and small-indel variant caller using deep neural networks"], ["Emerging bacterial pathogens: the past and beyond"], ["Identifying viruses from metagenomic data by deep learning"], ["Sequence logos: a new way to display consensus sequences"], ["Learning Important Features Through Propagating Activation Differences"], ["00416 [cs, q-bio, stat], March 2019b"], ["Nucleoid-associated protein hu: A lilliputian in gene regulation of bacterial virulence"], ["Gradients of Counterfactuals"], ["ViraMiner: Deep learning on raw DNA sequences for identifying viral genomes in human samples"], ["Synthetic viruses-Anything new? PLoS pathogens"], ["Viewer (IGV): high-performance genomics data visualization and exploration"], ["Detecting horizontal gene transfer by mapping sequencing reads across species boundaries"], ["Complete genome characterisation of a novel coronavirus associated with severe human respiratory disease in Wuhan, China"], ["Convolutional neural network architectures for predicting DNA-protein binding"], ["Rapid identification of human-infecting viruses"], ["Predicting effects of noncoding variants with deep learning-based sequence modelref_authors": [[], ["B. Alipanahi", "A. Delong", "Weirauch", "B. J. Predicting Frey"], ["S. F. Altschul", "W. Gish", "W. Miller", "E. W. Myers", "D. J. Lipman"], ["Avsec", "M. Weilert", "A. Shrikumar", "A. Alexandari", "S. Krueger", "K. Dalal", "R. Fropf", "C. McAnany", "J. Gagneur", "A. Kundaje", "J. Zeitlinger"], ["S. A. Babayan", "R. J. Orton", "D. G. Streicker"], ["S. Bach", "A. Binder", "G. Montavon", "F. Klauschen", "K. M\u00fcller", "W. Samek"], ["J. M. Bartoszewicz", "A. Seidel", "R. Rentzsch", "B. Y. Renard"], ["W. Brendel", "M. Approximating Bethge"], ["A. Calistri", "G. Pal\u00f9"], ["S. Calvignac-Spencer", "J. M. Schulze", "F. Zickmann", "B. Y. Renard"], ["G. E. Crooks", "G. Hon", "J.-M. Chandonia", "S. E. Brenner"], ["R. A. Edwards", "K. McNair", "K. Faust", "J. Raes", "B. E. Dutilh"], ["C. L. Eng", "J. C. Tong", "T. W. Tan"], ["G. Eraslan", "J. Gagneur", "F. J. Theis"], ["W. Ga\u0142an", "M. Jakubowska"], ["P. Greenside", "T. Shimko", "P. Fordyce", "A. Kundaje"], ["S. Herfst", "E. J. A. Schrauwen", "M. Linster", "S. Chutinimitkul", "Wit", "V. J. Munster", "E. M. Sorrell", "T. M. Bestebroer", "D. F. Burke", "D. J. Smith", "G. F. Rimmelzwaan", "A. D. M. E. Osterhaus", "R. A. M. Fouchier"], ["M. Holtgrewe"], ["M. Imai", "T. Watanabe", "M. Hatta", "S. C. Das", "M. Ozawa", "K. Shinya", "G. Zhong", "A. Hanson", "H. Katsura", "S. Watanabe", "C. Li", "E. Kawakami", "S. Yamada", "M. Kiso", "Y. Suzuki", "E. A. Maher", "G. Neumann", "Y. Kawaoka"], ["A. Jha", "J. K. Aicher", "D. Singh", "Y. Barash"], ["D. R. Kelley", "J. Snoek", "J. L. Rinn", "Basset"], ["J. Lanchantin", "R. Singh", "Z. Lin", "Y. Qi", "Deep"], ["J. Lanchantin", "R. Singh", "B. Wang", "Y. Qi"], ["M. Lecuit", "M. Eloit"], ["S. A. J. Leendertz", "J. F. Gogarten", "A. D\u00fcx", "CalvignacSpencer", "F. H. Assessing Leendertz"], ["F. Li", "Structure"], ["H. Li", "F. Sun"], ["M. Lipsitch", "T. V. Inglesby"], ["S. M. Lundberg", "S.-I. Lee", "U. V. Luxburg", "S. Bengio", "H. Wallach", "R. Fergus", "S. Vishwanathan", "Garnett"], ["A. Marchler-Bauer", "Bo", "L. Han", "J. He", "C. J. Lanczycki", "S. Lu", "F. Chitsaz", "M. K. Derbyshire", "R. C. Geer", "N. R. Gonzales", "M. Gwadz", "D. I. Hurwitz", "F. Lu", "G. H. Marchler", "J. S. Song", "N. Thanki", "Z. Wang", "R. A. Yamashita", "D. Zhang", "C. Zheng", "Geer", "S. H. Bryant"], ["T. Mihara", "Y. Nishimura", "Y. Shimizu", "H. Nishiyama", "G. Yoshikawa", "H. Uehara", "P. Hingamp", "S. Goto", "H. Ogata"], ["F. Mock", "A. Viehweger", "E. Barth", "M. Marz"], ["A. Moustafa", "C. Xie", "E. Kirkness", "W. Biggs", "E. Wong", "Y. Turpaz", "K. Bloom", "E. Delwart", "K. E. Nelson", "J. C. Venter", "A. Telenti"], ["U. Naftaly", "N. Intrator", "D. Horn"], ["S. Nair", "D. S. Kim", "J. Perricone", "A. Kundaje"], ["R. S. Noyce", "S. Lederman", "D. H. Evans"], ["R. Poplin", "Chang", "D. Alexander", "S. Schwartz", "T. Colthurst", "A. Ku", "D. Newburger", "J. Dijamco", "N. Nguyen", "P. T. Afshar", "S. S. Gross", "L. Dorfman", "C. Y. McLean", "M."], ["M. Vouga", "G. Greub"], ["J. Ren", "K. Song", "C. Deng", "N. A. Ahlgren", "J. A. Fuhrman", "Y. Li", "X. Xie", "F. Sun"], ["T. D. Schneider", "Stephens"], ["A. Shrikumar", "P. Greenside", "A. Kundaje"], ["A. Shrikumar", "K. Tian", "A. Shcherbina", "Avsec", "A. Banerjee", "M. Sharmin", "S. Nair", "A. Kundaje"], ["P. Stojkova", "P. Spidlova", "J. Stulik"], ["M. Sundararajan", "A. Taly", "Q. Yan"], ["A. Tampuu", "Z. Bzhalava", "J. Dillner", "R. Vicente"], ["V. Thiel"], ["H. Thorvaldsd\u00f3ttir", "J. T. Robinson", "J. P. Mesirov", "Integrative Genomics"], ["K. Trappe", "T. Marschall", "B. Y. Renard"], ["F. Wu", "S. Zhao", "B. Yu", "Y.-M. Chen", "W. Wang", "Y. Hu", "Z.-G. Song", "Z.-W. Tao", "J.-H. Tian", "Pei", "M.- L. Yuan", "Zhang", "F.-H. Dai", "Y. Wang", "Q.-M. Zheng", "L. Xu", "E. C. Holmes"], ["H. Zeng", "M. D. Edwards", "G. Gifford", "D. K."], ["Z. Zhang", "Z. Cai", "Z. Tan", "C. Lu", "T. Jiang", "Y. Peng"], ["J. Zhou", "O. G. Troyanskayafir_para": "\n          Within a globally interconnected and densely populated\nworld, pathogens can spread more easily than they ever did\nbefore. As the recent outbreaks of Ebola and Zika viruses\nhave shown, the risks posed even by these previously known\nagents remain unpredictable and their expansion hard to\ncontrol\n          ", "one_words_summarize": "Within a globally interconnected and densely populatedworld, pathogens can spread more easily than they ever didbefore. Onecould expect that the multitude of available bacteriophagegenomes dominating the negative class could lower theprediction performance on viruses similar to those infectinghumans. In thiscase, the negative class comprises only viruses infectingChordata (a group containing vertebrates and closely relatedtaxa). The sameapplied to other taxonomic levels, as well as the training andvalidation sets wherever applicable. The evaluation was performed using all five test sets togain a more detailed insight on the effects of negative classdefinition on the prediction performance. Then, weretrained the CNN which had performed best on the originaldataset. We compare the networks to the k-NN classifier proposedby                      In order to visualize the learned convolutional filters, wedownsample a matching test set to 125,000 reads and passit through the network. However, some of the training sequences contain N sthemselves. It is therefore possible that a filter will learn onlynegative weights at a given position, even though there is nobiological justification for that. This can be then interpreted as measureof evolutionary sequence conservation. To this end, we design extended sequence logos,where each nucleotide is colored according to itscontribution. We create genome-wide phenotype analysis (GWPA) plotsto analyse which parts of a viral genome are associatedwith the infectious phenotype. For the highestresolution, we use a stride of one nucleotide. We use Gene Ontology to connect theidentified genes of interest with their molecular functionsand biological processes they are engaged in. This suggests that thelearned decision boundary separates human viruses from allthe others surprisingly well. Table 2 presents the results of a benchmark using the \"All\"test set. Most genes can be detected by findingpeaks of elevated pathogenic potential score predicted by atleast one of the models. If the input data contains N s, a ReLU networkmay learn only negative weights at some positions, resulting          (a) Whole genome and sequences encoding the spike protein (S), envelope protein (E) and nucleocapsid protein (N).(b) Spike protein gene, a small peak (positions 22,595-22,669) within the receptor-binding domain (predictied by CD-search). In our case, as the filters were weight-normalized,the counter-contributions suggest that the informationcontent and the contribution of a nucleotide are not necessarilycorrelated. We presented a new approach for predicting a host of a novelvirus based on a single DNA read or a read pair, cutting theerror rates in half compared to the previous state-of-the-art. NBI) (031A537B, 031A533A, 031A538A, 031A533B,031A535A, 031A537C, 031A534A, 031A532B)."}